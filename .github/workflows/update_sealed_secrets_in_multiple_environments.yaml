name: Seal Github secrets in multiple environments

on:
  workflow_call:
    inputs:
      kubernetes_namespace:
        description: "Namespace for sealed secrets"
        type: string
        required: true
      dev:
        description: "Enable dev environment"
        type: boolean
        default: false
      test:
        description: "Enable test environment"
        type: boolean
        default: false
      staging:
        description: "Enable staging environment"
        type: boolean
        default: false
      prod:
        description: "Enable prod environment"
        type: boolean
        default: false
      shared:
        description: "Enable shared environment"
        type: boolean
        default: false

jobs:

  dev:
    name: dev
    if: inputs.dev
    uses: borsboom/seal-github-secrets-action/.github/workflows/update_sealed_secrets.yaml@main #TODO: SPECIFY TAG
    secrets: inherit
    with:
      environment: dev
      kubernetes_namespace: ${{ inputs.kubernetes_namespace }}

  test:
    name: test
    if: inputs.test
    uses: borsboom/seal-github-secrets-action/.github/workflows/update_sealed_secrets.yaml@main #TODO: SPECIFY TAG
    secrets: inherit
    with:
      environment: test
      kubernetes_namespace: ${{ inputs.kubernetes_namespace }}

  staging:
    name: staging
    if: inputs.staging
    uses: borsboom/seal-github-secrets-action/.github/workflows/update_sealed_secrets.yaml@main #TODO: SPECIFY TAG
    secrets: inherit
    with:
      environment: staging
      kubernetes_namespace: ${{ inputs.kubernetes_namespace }}

  prod:
    name: prod
    if: inputs.prod
    uses: borsboom/seal-github-secrets-action/.github/workflows/update_sealed_secrets.yaml@main #TODO SPECIFY TAG
    secrets: inherit
    with:
      environment: prod
      kubernetes_namespace: ${{ inputs.kubernetes_namespace }}

  shared:
    name: shared
    if: inputs.shared
    uses: borsboom/seal-github-secrets-action/.github/workflows/update_sealed_secrets.yaml@main #TODO: SPECIFY TAG
    secrets: inherit
    with:
      environment: shared
      kubernetes_namespace: ${{ inputs.kubernetes_namespace }}
